{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01-preview/deploymentTemplate.json",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "north europe",

      "metadata": {
        "description": "location of resources"
      }
    },
    "vmSku": {
      "type": "string",
      "defaultValue": "Standard_D1_v2",
      "metadata": {
        "description": "Size of VMs in the VM Scale Set."
      }
    },
    "vmssName": {
      "type": "string",
      "defaultValue": "newdinscale",
      "metadata": {
        "description": "String used as a base for naming resources. Must be 3-61 characters in length and globally unique across Azure. A hash is prepended to this string for some resources, and resource-specific information is appended."
      },
      "maxLength": 61
    },
    "instanceCount": {
      "type": "int",
      "defaultValue": 2,
      "metadata": {
        "description": "Number of VM instances (100 or less)."
      }
    },
    "authenticationType": {
      "type": "string",
      "defaultValue": "password",
      "metadata": {
        "description": "password or ssh key"
      }
    },
    "username": {
      "type": "string",
      "defaultValue": "dinor",
      "metadata": {
        "description": "Admin username on all VMs."
      }
    },
    "password": {
      "defaultValue": "Corp123!",
      "type": "securestring",
      "metadata": {
        "description": "Admin password on all VMs."
      }
    }
  },
  "variables": {
    "instanceCount": "[int(parameters('instanceCount'))]",
    "apiVersion": "2015-06-15",
    "vmssApiVersion": "2016-03-30",
    "resourceLocation": "[parameters('location')]",
    "storageAccountTypes": [
      "Premium_LRS",
      "Standard_LRS"
    ],
    "saTypeIndex": "[length(replace(substring(parameters('vmSku'), 10, 1), 'S', ''))]",
    "storageAccountType": "[variables('storageAccountTypes')[variables('saTypeIndex')]]",
    "saCount": 5,
    "namingInfix": "[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]",
    "longNamingInfix": "[toLower(parameters('vmssName'))]",
    "newStorageAccountSuffix": "[concat(variables('namingInfix'), 'sa')]",
    "uniqueStringArray": [
      "[concat(uniqueString(concat(resourceGroup().id, variables('newStorageAccountSuffix'), '0')))]",
      "[concat(uniqueString(concat(resourceGroup().id, variables('newStorageAccountSuffix'), '1')))]",
      "[concat(uniqueString(concat(resourceGroup().id, variables('newStorageAccountSuffix'), '2')))]",
      "[concat(uniqueString(concat(resourceGroup().id, variables('newStorageAccountSuffix'), '3')))]",
      "[concat(uniqueString(concat(resourceGroup().id, variables('newStorageAccountSuffix'), '4')))]"
    ],
    "vhdContainerName": "[concat(variables('namingInfix'), 'vhd')]",
    "osDiskName": "[concat(variables('namingInfix'), 'osdisk')]",
    "addressPrefix": "10.0.0.0/16",
    "subnetPrefix": "10.0.0.0/24",
    "virtualNetworkName": "WorkloadVNET",
    "publicIPAddressName": "[concat(variables('namingInfix'), 'pip')]",
    "subnetName": "sqlSubnet",
    "loadBalancerName": "[concat(variables('namingInfix'), 'lb')]",
    "publicIPAddressID": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]",
    "lbID": "[resourceId('Microsoft.Network/loadBalancers',variables('loadBalancerName'))]",
    "natPoolName": "[concat(variables('namingInfix'), 'natpool')]",
    "bePoolName": "[concat(variables('namingInfix'), 'bepool')]",
    "natStartPort": 50000,
    "natEndPort": 50099,
    "natBackendPort": 22,
    "nicName": "[concat(variables('namingInfix'), 'nic')]",
    "ipConfigName": "[concat(variables('namingInfix'), 'ipconfig')]",
    "frontEndIPConfigID": "[concat(variables('lbID'),'/frontendIPConfigurations/loadBalancerFrontEnd')]",
    "wadProcessorMetricName": "\\Processor\\PercentProcessorTime"
  },
  "resources": [
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[variables('resourceLocation')]",
      "apiVersion": "[variables('apiVersion')]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[variables('longNamingInfix')]"
        }
      }
    },
    {
      "type": "Microsoft.Network/loadBalancers",
      "name": "[variables('loadBalancerName')]",
      "location": "[variables('resourceLocation')]",
      "apiVersion": "[variables('apiVersion')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]"
      ],
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "LoadBalancerFrontEnd",
            "properties": {
              "publicIPAddress": {
                "id": "[variables('publicIPAddressID')]"
              }
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "[variables('bePoolName')]"
          }
        ],
        "inboundNatPools": [
          {
            "name": "[variables('natPoolName')]",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('frontEndIPConfigID')]"
              },
              "protocol": "tcp",
              "frontendPortRangeStart": "[variables('natStartPort')]",
              "frontendPortRangeEnd": "[variables('natEndPort')]",
              "backendPort": "[variables('natBackendPort')]"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachineScaleSets",
      "name": "[variables('namingInfix')]",
      "location": "[variables('resourceLocation')]",
      "apiVersion": "[variables('vmssApiVersion')]",
      "dependsOn": [
       
        "[concat('Microsoft.Network/loadBalancers/', variables('loadBalancerName'))]"
        
      ],
      "sku": {
        "name": "[parameters('vmSku')]",
        "tier": "Standard",
        "capacity": "[variables('instanceCount')]"
      },
      "properties": {
        "overprovision": "true",
        "upgradePolicy": {
          "mode": "Manual"
        },
        "virtualMachineProfile": {
          "storageProfile": {
            "osDisk": {
              "name": "[variables('osDiskName')]",
              "caching": "ReadOnly",
              "createOption": "FromImage",
              "image": {
                "uri": "https://rmfqpt2urdtvkdinscalezsa.blob.core.windows.net/dinscalezvhd/dincentos20164994518.vhd"

              },
              "osType": "linux"
            }
          },
          "osProfile": {
            "computerNamePrefix": "[variables('namingInfix')]",
            "adminUsername": "[parameters('Username')]",
            "adminPassword": "[parameters('Password')]"
          },

          "networkProfile": {
            "networkInterfaceConfigurations": [
              {
                "name": "[variables('nicName')]",
                "properties": {
                  "primary": "true",
                  "ipConfigurations": [
                    {
                      "name": "[variables('ipConfigName')]",
                      "properties": {
                        "subnet": {
                          "id": "[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'), '/subnets/', variables('subnetName'))]"
                        },
                        "loadBalancerBackendAddressPools": [
                          {
                            "id": "[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/loadBalancers/', variables('loadBalancerName'), '/backendAddressPools/', variables('bePoolName'))]"
                          }
                        ],
                        "loadBalancerInboundNatPools": [
                          {
                            "id": "[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/loadBalancers/', variables('loadBalancerName'), '/inboundNatPools/', variables('natPoolName'))]"
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            ]
          }
        }
      },
        "resources": [
            {
                "name": "autoscalewad",
                "type": "Microsoft.Insights/autoscaleSettings",
                "location": "[variables('resourceLocation')]",
                "apiVersion": "2014-04-01",
                "dependsOn": [
                    "[concat('Microsoft.Compute/virtualMachineScaleSets/', variables('namingInfix'))]"
                ],
                "tags": {
                    "displayName": "autoscale AutoScale"
                },
                "properties": {
                    "name": "autoscalewad",
                    "targetResourceUri": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Compute/virtualMachineScaleSets/', variables('namingInfix'))]",
                    "enabled": true,
                    "profiles": [
                        {
                            "name": "Profile1",
                            "capacity": {
                                "minimum": "1",
                                "maximum": "10",
                                "default": "1"
                            },
                            "rules": [
                                {
                                    "metricTrigger": {
                                        "metricName": "[variables('wadProcessorMetricName')]",
                                        "metricNamespace": "",
                                        "metricResourceUri": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Compute/virtualMachineScaleSets/', variables('namingInfix'))]",
                                        "timeGrain": "PT1M",
                                        "statistic": "Average",
                                        "timeWindow": "PT5M",
                                        "timeAggregation": "Average",
                                        "operator": "GreaterThan",
                                        "threshold": 80
                                    },
                                    "scaleAction": {
                                        "direction": "Increase",
                                        "type": "ChangeCount",
                                        "value": "1",
                                        "cooldown": "PT5M"
                                    }
                                },
                                {
                                    "metricTrigger": {
                                        "metricName": "[variables('wadProcessorMetricName')]",
                                        "metricNamespace": "",
                                        "metricResourceUri": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Compute/virtualMachineScaleSets/', variables('namingInfix'))]",
                                        "timeGrain": "PT1M",
                                        "statistic": "Average",
                                        "timeWindow": "PT5M",
                                        "timeAggregation": "Average",
                                        "operator": "LessThan",
                                        "threshold": 60
                                    },
                                    "scaleAction": {
                                        "direction": "Decrease",
                                        "type": "ChangeCount",
                                        "value": "1",
                                        "cooldown": "PT1M"
                                    }
                                }
                            ]
                        }
                    ]
                }
            }
        ]
    }
  ]
}